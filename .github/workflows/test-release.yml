name: Test Release

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Release Version'
        required: true
        default: '0.0.0'
      test1Version:
        description: 'Test1 Version'
        required: true
        default: '0.0.0'
      test2Version:
        description: 'Test1 Version'
        required: true
        default: '0.0.0'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    # basic build stuff setup
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - uses: jvalkeal/setup-maven@v1
      with:
        maven-version: 3.6.2
    - uses: jfrog/setup-jfrog-cli@v1
      with:
        version: 1.36.0
      env:
        JF_ARTIFACTORY_SPRING: ${{ secrets.JF_ARTIFACTORY_SECRET_SPRING }}

    # sanity checks
    # - uses: jvalkeal/build-zoo-handler@main
    #   with:
    #     ensure-commands: |
    #       curl
    #       jfrog
    #     ensure-env: |
    #       RELEASE_VERSION
    #       TEST1_VERSION

    # massage poms
    - name: Configure Release Versions
      env:
        RELEASE_VERSION: ${{ github.event.inputs.releaseVersion }}
        TEST1_VERSION: ${{ github.event.inputs.test1Version }}
        TEST2_VERSION: ${{ github.event.inputs.test2Version }}
      run: |
        mvn versions:set -DgenerateBackupPoms=false -DnewVersion=$RELEASE_VERSION
        mvn versions:set-property -DgenerateBackupPoms=false -Dproperty=test1.version -DnewVersion=$TEST1_VERSION
        mvn versions:set-property -DgenerateBackupPoms=false -Dproperty=test2.version -DnewVersion=$TEST2_VERSION

    # configure jfrog targets
    - name: Configure JFrog Cli
      run: |
        jfrog rt mvnc --server-id-resolve=spring --server-id-deploy=spring --repo-resolve-releases=libs-private-release --repo-deploy-snapshots=libs-private-snapshot --repo-resolve-snapshots=libs-private-snapshot --repo-deploy-releases=libs-private-release

    # build and publish
    - name: Build and Publish
      run: jfrog rt mvn -U -B clean install

    # tag release
    - name: Tag Release
      env:
        RELEASE_VERSION: ${{ github.event.inputs.releaseVersion }}
      run: |
        git add .
        git checkout -b $RELEASE_VERSION
        git commit -m "Release $RELEASE_VERSION"
        git push origin $RELEASE_VERSION
        git tag "v$RELEASE_VERSION"
        git push --tags origin

    # git config --global user.name 'Spring Buildmaster'
    # git config --global user.email 'buildmaster@springframework.org'

    # - uses: jvalkeal/build-zoo-handler@main
    #   with:
    #     tag-release-username: 'Spring Buildmaster'
    #     tag-release-useremail: 'buildmaster@springframework.org'
    #     tag-release-branch: $RELEASE_VERSION
    #     tag-release-tag: v$RELEASE_VERSION
